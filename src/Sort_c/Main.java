/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Sort_c;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class Main extends javax.swing.JPanel {

    public static void main(String[] args) {
        new NewJFrame().setVisible(true);
        new Main().setVisible(true);
        /*JTable tabel = new JTable();
        Sort sort = new Sort(tabel);
         Object[] arr = {0.1,3.2,1.3,2.5};
         sort.setData(arr);
        //sort.getData();
        sort.selectionSort();        
        sort.bobbleSort();
        sort.quickSort();
        sort.mergeSort();
        sort.shellSort();
        sort.shellInsortSort();
        sort.treeSort();
        sort.binaryInsertionSort();
        sort.radixSort();
        sort.heapSort();
        sort.gnomeSort();
        sort.brickSort();
        sort.pigeonHoleSort();
        //terminalde sıralanmış biçimde yazmakta
        System.out.println(sort.array);*/
    }

    //44,1,78,9,23,7,50
    Sort sortc;

    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtInput = new javax.swing.JTextField();
        cmbAlgorithm = new javax.swing.JComboBox<>();
        rbtnString = new javax.swing.JRadioButton();
        rbtnDouble = new javax.swing.JRadioButton();
        rbtnInt = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        printTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtStartTime = new javax.swing.JLabel();
        txtFinishTime = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTotalOperation = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTime = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        btnStart = new javax.swing.JButton();
        txtMergeSortTime = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtShellSortTime = new javax.swing.JLabel();
        txtQuickSortTime = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        txtShellInsortSortTime = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        txtHeapSortTime = new javax.swing.JLabel();
        txtBinaryInsertionSortTime = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtBubbleSortTime = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtİnsertionSortTime = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtSelectionSortTime = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtTreeSortTime = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txtRadixSortTime = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtGnomeSortTime = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtBrickSortTime = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtPigeonholeSortTime = new javax.swing.JLabel();

        jPanel1.setMinimumSize(new java.awt.Dimension(1920, 1020));

        txtInput.setToolTipText("sasaas");
        txtInput.setName("txtInput"); // NOI18N

        cmbAlgorithm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "QuickSort", "MergeSort", "HeapSort", "BubbleSort", "İnsertionSort", "SelectionSort", "TreeSort", "RadixSort", "GnomeSort", "BrickSort", "PigeonholeSort", "ShellSort", "CountingSort", "BinaryInsertionSort" }));
        cmbAlgorithm.setName("cmbAlgorithm"); // NOI18N

        rbtnString.setText("String Array");

        rbtnDouble.setText("Double Array");

        rbtnInt.setText("Integer Array");

        printTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sayılar"
            }
        ));
        printTable.setMinimumSize(new java.awt.Dimension(1400, 860));
        printTable.setPreferredSize(new java.awt.Dimension(1400, 860));
        jScrollPane1.setViewportView(printTable);

        jLabel1.setText("Başlangıç Zamanı");

        txtStartTime.setText("*");
        txtStartTime.setName("txtStartTime"); // NOI18N

        txtFinishTime.setText("*");
        txtFinishTime.setName("txtFinishTime"); // NOI18N

        jLabel4.setText("Bitiş Zamanı");

        txtTotalOperation.setText("*");
        txtTotalOperation.setName("txtTotalOperation"); // NOI18N

        jLabel6.setText("Yapılan İşlem Sayısı");

        txtTime.setText("*");
        txtTime.setName("txtTime"); // NOI18N

        jLabel8.setText("Geçen Zaman(ns)");

        btnReset.setText("SIFIRLA");
        btnReset.setName("btnReset"); // NOI18N
        btnReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResetMouseClicked(evt);
            }
        });
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnStart.setText("BASLAT");
        btnStart.setName("btnStart"); // NOI18N
        btnStart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnStartMouseClicked(evt);
            }
        });
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        txtMergeSortTime.setText("*");
        txtMergeSortTime.setName("txtMergeSortTime"); // NOI18N

        jLabel31.setText("ShellSort");

        jLabel10.setText("MergeSort");

        txtShellSortTime.setText("*");
        txtShellSortTime.setName("txtShellSortTime"); // NOI18N

        txtQuickSortTime.setText("*");
        txtQuickSortTime.setName("txtQuickSortTime"); // NOI18N

        jLabel12.setText("QuickSort");

        jLabel33.setText("Counting Sort");

        txtShellInsortSortTime.setText("*");
        txtShellInsortSortTime.setName("txtShellInsortSortTime"); // NOI18N

        jLabel13.setText("HeapSort");

        jLabel35.setText("BinaryInsertionSort");

        txtHeapSortTime.setText("*");
        txtHeapSortTime.setName("txtHeapSortTime"); // NOI18N

        txtBinaryInsertionSortTime.setText("*");
        txtBinaryInsertionSortTime.setName("txtBinaryInsertionSortTime"); // NOI18N

        jLabel15.setText("BubbleSort");

        txtBubbleSortTime.setText("*");
        txtBubbleSortTime.setName("txtBubbleSortTime"); // NOI18N

        jLabel17.setText("İnsertionSort");

        txtİnsertionSortTime.setText("*");
        txtİnsertionSortTime.setName("txtInsertionSortTime"); // NOI18N

        jLabel19.setText("SelectionSort");

        txtSelectionSortTime.setText("*");
        txtSelectionSortTime.setName("txtSelectionSortTime"); // NOI18N

        jLabel21.setText("TreeSort");

        txtTreeSortTime.setText("*");
        txtTreeSortTime.setName("txtTreeSortTime"); // NOI18N

        jLabel23.setText("RadixSort");

        txtRadixSortTime.setText("*");
        txtRadixSortTime.setName("txtRadixSortTime"); // NOI18N

        jLabel25.setText("GnomeSort");

        txtGnomeSortTime.setText("*");
        txtGnomeSortTime.setName("txtGnomeSortTime"); // NOI18N

        jLabel27.setText("BrickSort");

        txtBrickSortTime.setText("*");
        txtBrickSortTime.setName("txtBrickSortTime"); // NOI18N

        jLabel29.setText("PigeonholeSort");

        txtPigeonholeSortTime.setText("*");
        txtPigeonholeSortTime.setName("txtPigeonholeSortTime"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFinishTime, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(txtTotalOperation, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbtnInt)
                        .addGap(43, 43, 43)
                        .addComponent(rbtnDouble)
                        .addGap(86, 86, 86)
                        .addComponent(rbtnString))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(cmbAlgorithm, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(80, 80, 80)
                                .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtQuickSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMergeSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtHeapSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBubbleSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtİnsertionSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSelectionSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTreeSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtRadixSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtGnomeSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBrickSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtPigeonholeSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtShellSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtShellInsortSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBinaryInsertionSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(607, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbAlgorithm, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnInt, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbtnDouble, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbtnString, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTotalOperation, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtFinishTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQuickSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMergeSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHeapSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBubbleSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtİnsertionSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSelectionSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTreeSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRadixSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGnomeSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBrickSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPigeonholeSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtShellSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtShellInsortSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBinaryInsertionSortTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1920, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1020, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetMouseClicked
        System.out.println("Rested!");
    }//GEN-LAST:event_btnResetMouseClicked

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed

        txtTime.setText("");
        txtStartTime.setText("");
        txtFinishTime.setText("");
        DefaultTableModel model = (DefaultTableModel) sortc.table.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnStartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStartMouseClicked
        Date instant = new Date(System.currentTimeMillis());
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
        String time = sdf.format(instant);
        DefaultTableModel model = (DefaultTableModel) printTable.getModel();
        model.setRowCount(0);
        int count = 0;
        if (rbtnInt.isSelected()) {
            ArrayList<Integer> array = new ArrayList<Integer>();
            String arr[] = txtInput.getText().split(",");
            for (int i = 0; i < arr.length; i++) {
                array.add(Integer.valueOf(arr[i]));
            }
            sortc = new Sort(array, "integer", printTable);
            count++;
        } else if (rbtnDouble.isSelected()) {
            ArrayList<Double> array = new ArrayList<Double>();
            String arr[] = txtInput.getText().split(",");
            for (int i = 0; i < arr.length; i++) {
                array.add(Double.valueOf(arr[i]));
            }
            sortc = new Sort(array, "double", printTable);
            count++;
        } else if (rbtnString.isSelected()) {
            ArrayList<String> array = new ArrayList<String>();
            String arr[] = txtInput.getText().split(",");
            for (int i = 0; i < arr.length; i++) {
                array.add(arr[i]);
            }
            sortc = new Sort(array, "string", printTable);
            count++;
        } else {
            JOptionPane.showMessageDialog(null, "ERROR", "InfoBox: " + "Lütfen bilgileriniz kontrol ediniz!!", JOptionPane.INFORMATION_MESSAGE);
        }
        if (count > 0 && txtInput.getText() != "") {
            switch (cmbAlgorithm.getSelectedIndex()) {
                case 0:
                    txtStartTime.setText(time);
                    sortc.quickSort();
                    txtTime.setText(sortc.totalTimeQ.toString());
                    txtFinishTime.setText(sortc.FNTimeQ);
                    txtQuickSortTime.setText(sortc.totalTimeQ.toString());
                    System.out.println(sortc.array);
                    break;
                case 1:
                    txtStartTime.setText(time);
                    sortc.mergeSort();
                    txtTime.setText(sortc.totalTimeM.toString());
                    txtFinishTime.setText(sortc.FNTimeM);
                    txtMergeSortTime.setText(sortc.totalTimeM.toString());
                    System.out.println(sortc.array.toString());
                    break;
                case 2:
                    txtStartTime.setText(time);
                    sortc.heapSort();
                    txtTime.setText(sortc.totalTimeH.toString());
                    txtFinishTime.setText(sortc.FNTimeH);
                    txtHeapSortTime.setText(sortc.totalTimeH.toString());
                    System.out.println(sortc.array);
                    break;
                case 3:
                    txtStartTime.setText(time);
                    sortc.bobbleSort();
                    txtTime.setText(sortc.totalTimeB.toString());
                    txtFinishTime.setText(sortc.FNTimeB);
                    txtBubbleSortTime.setText(sortc.totalTimeB.toString());
                    //txtResult.setText(sortc.array.toString());
                    System.out.println(sortc.array);
                    break;
                case 4:
                    txtStartTime.setText(time);
                    sortc.insertionSort();
                    txtTime.setText(sortc.totalTimeI.toString());
                    txtFinishTime.setText(sortc.FNTimeI);
                    txtİnsertionSortTime.setText(sortc.totalTimeI.toString());
                    //txtResult.setText(sortc.array.toString());
                    System.out.println(sortc.array);
                    break;
                case 5:
                    txtStartTime.setText(time);
                    sortc.selectionSort();
                    txtTime.setText(sortc.totalTimeS.toString());
                    txtFinishTime.setText(sortc.FNTimeS);
                    txtSelectionSortTime.setText(sortc.totalTimeS.toString());
                    System.out.println(sortc.array);
                    break;
                case 6:
                    txtStartTime.setText(time);
                    sortc.treeSort();
                    txtTime.setText(sortc.totalTimeT.toString());
                    txtFinishTime.setText(sortc.FNTimeT);
                    txtTreeSortTime.setText(sortc.totalTimeT.toString());
                    System.out.println(sortc.array);
                    break;
                case 7:
                    txtStartTime.setText(time);
                    sortc.radixSort();
                    txtTime.setText(sortc.totalTimeR.toString());
                    txtFinishTime.setText(sortc.FNTimeR);
                    txtRadixSortTime.setText(sortc.totalTimeR.toString());
                    System.out.println(sortc.array);
                    break;
                case 8:
                    txtStartTime.setText(time);
                    sortc.gnomeSort();
                    txtTime.setText(sortc.totalTimeG.toString());
                    txtFinishTime.setText(sortc.FNTimeG);
                    txtGnomeSortTime.setText(sortc.totalTimeG.toString());
                    System.out.println(sortc.array.toString());
                    break;
                case 9:
                    txtStartTime.setText(time);
                    sortc.brickSort();
                    txtTime.setText(sortc.totalTimeBR.toString());
                    txtFinishTime.setText(sortc.FNTimeBR);
                    txtBrickSortTime.setText(sortc.totalTimeBR.toString());
                    System.out.println(sortc.array);
                    break;
                case 10:
                    txtStartTime.setText(time);
                    sortc.pigeonHoleSort();
                    txtTime.setText(sortc.totalTimeP.toString());
                    txtFinishTime.setText(sortc.FNTimeP);
                    txtPigeonholeSortTime.setText(sortc.totalTimeP.toString());
                    System.out.println(sortc.array);
                    break;
                case 11:
                    txtStartTime.setText(time);
                    sortc.shellSort();
                    txtTime.setText(sortc.totalTimeSH.toString());
                    txtFinishTime.setText(sortc.FNTimeSH);
                    txtShellSortTime.setText(sortc.totalTimeSH.toString());
                    System.out.println(sortc.array.toString());
                    break;
                case 12:
                    txtStartTime.setText(time);
                    sortc.shellInsortSort();
                    txtTime.setText(sortc.totalTimeSHI.toString());
                    txtFinishTime.setText(sortc.FNTimeSHI);
                    txtShellInsortSortTime.setText(sortc.totalTimeSHI.toString());
                    System.out.println(sortc.array);
                    break;
                case 13:
                    txtStartTime.setText(time);
                    sortc.binaryInsertionSort();
                    txtTime.setText(sortc.totalTimeBIN.toString());
                    txtFinishTime.setText(sortc.FNTimeBIN);
                    txtBinaryInsertionSortTime.setText(sortc.totalTimeBIN.toString());
                    System.out.println(sortc.array.toString());
                    break;
            }
        }
    }//GEN-LAST:event_btnStartMouseClicked

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnStartActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnStart;
    private javax.swing.JComboBox<String> cmbAlgorithm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable printTable;
    private javax.swing.JRadioButton rbtnDouble;
    private javax.swing.JRadioButton rbtnInt;
    private javax.swing.JRadioButton rbtnString;
    private javax.swing.JLabel txtBinaryInsertionSortTime;
    private javax.swing.JLabel txtBrickSortTime;
    private javax.swing.JLabel txtBubbleSortTime;
    private javax.swing.JLabel txtFinishTime;
    private javax.swing.JLabel txtGnomeSortTime;
    private javax.swing.JLabel txtHeapSortTime;
    private javax.swing.JTextField txtInput;
    private javax.swing.JLabel txtMergeSortTime;
    private javax.swing.JLabel txtPigeonholeSortTime;
    private javax.swing.JLabel txtQuickSortTime;
    private javax.swing.JLabel txtRadixSortTime;
    private javax.swing.JLabel txtSelectionSortTime;
    private javax.swing.JLabel txtShellInsortSortTime;
    private javax.swing.JLabel txtShellSortTime;
    private javax.swing.JLabel txtStartTime;
    private javax.swing.JLabel txtTime;
    private javax.swing.JLabel txtTotalOperation;
    private javax.swing.JLabel txtTreeSortTime;
    private javax.swing.JLabel txtİnsertionSortTime;
    // End of variables declaration//GEN-END:variables
}
